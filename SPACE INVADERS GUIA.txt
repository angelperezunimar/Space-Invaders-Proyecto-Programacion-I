Variables:

fnp: Fin del programa (Usada para bucle total del programa)
scr: Score (Puntuacion del jugador)
opciones: Primer conjunto de opciones para el jugador: Jugar o cerrar el juego.
nickname: nombre de usuario.
ppx: Posicion x del jugador
ppy: Posicion y del jugador
apx: Posicion x del alien
apy: Posicion y del alien
bx: Posicion x de la bala
by: Posicion y de la bala
dir: direccion del alien
aliens: valores de vida de los aliens
rdm: "Random" Arreglo de valores random para establecer direccion inicial
AActivo: "AliensActivo" otorga valor de true para la ejecucion del movimiento de los aliens
ABullet: "AlienBullet" Comprueba si el alien debe disparar
bya: Posicion y de la bala del alien
bxa: Posicion x de la bala del alien
ABActivo: "Alien Bullet Activo" arreglo boleano sobre las balas de los aliens
VJugador: "VidaJugador" Cantidad de vida del jugador
JActivo: "JugadorActivo" Valor que indica si el jugador esta vivo
RDisparo: "RandomDisparo" Valor para indicar cuando cual alien dispara
aliensv: "AliensVida" Valor para indicar la vida de un alien determinado
OJuego: "OpcionJuego" permite la seleccion al finalizar la partida
x1, x2, x3, cod1, cod2, cod3: variables que permiten almacenar el cambio realizado al ingresar una letra y por consiguiente almacenar el numero donde se ve el "error"
repit: para realizar un bucle
aliensb: para ver mas informacion de los aliens, y condicionar bucles
dificultades: para elegir las dificultades del juego

Constantes:
APantalla: "AlturaPantalla" Alto de pantalla de Juego
LPantalla: "LargoPantalla" Largo de pantalla de Juego


Procedures:
DPlayer: "DisplayPlayer" muestra al jugador en pantalla
MPlayer: "MovePlayer" mueve al jugador en las posiciones de X
BPlayer: "BulletPlayer" Dibuja el disparo del jugador
MBullet: "MoveBullet" Mueve el disparo del jugador
MAliens: "MoveAliens" mueve a los aliens
DPlayer: "DisplayAliens" muestra a los aliens en pantalla
ADisparo: "DisparoAlien" Dibuja el disparo del alien

Validacion: consto de usar ciertas variables (x1, x2, x3, cod1, cod2, cod3) donde se almaceno los valores ingresado en la variable de tipo string correspondiente, al usar Val(x,x,x) se almacena el valor de la primera variable transformada en X1,X2 y X3, posteriormente en las variables cod1,cod2,cod3, para almacenar el cambio de la variable de tipo string a variable integer, entonces, se aplica un repit que esta condicionado de la siguiente manera: el bucle se repetira hasta que el valor de cod1,cod2 y cod3 sea mayor que 0, el valor de cod sera 0 si se ingresa un numero, si se ingresa una letra o cadena de caracteres te mostrara donde ocurrio el error tomando en cuenta la posicion donde esta la letra ejemplificado:

si se ingresa 32 el valor de las variables cod sera 0, si se coloca h2 (es un ejemplos) te mostrara el espacio donde esta el "error" en este caso el primer espacio quedando entonces que su valor sera 1